"""Tools module docsting

"""

import os as _os
import subprocess as _subprocess
import tempfile as _tempfile


def run_process(name, arguments, logger=None):
    """Run system level command as blocking process and
    log output and error messages if logger is provided"""
    command = name + " " + " ".join([str(x) for x in arguments])
    if logger:
        # temporary file to capture output error messages generated by Java
        # Note: could change be NOT automatically deleted
        # Note: temp file created in the current working directory
        err_file_ref, err_file_path = _tempfile.mkstemp(suffix=".log")
        err_file = _os.fdopen(err_file_ref, "w")
        try:
            # NOTE: can set cwd=path
            output = _subprocess.check_output(command, stderr=err_file, shell=True)
            logger.log(output)
        except _subprocess.CalledProcessError as error:
            logger.log(error.output)
            raise
        finally:
            err_file.close()
            with open(err_file_path, "r") as err_file:
                error_msg = err_file.read()
            _os.remove(err_file_path)
            if error_msg:
                logger.log(error_msg)
    else:
        _subprocess.check_call(command, shell=True)
