name: Release Workflow

on:
  release:
    types: [published]

jobs:
  build-test-deploy:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]
    env:
      DEPLOY_TARGET: ${{ matrix.python-version == '3.8' }}

    steps:
    - uses: actions/checkout@v2
    - name: Document python/os version
      run: |
        echo "Python V ${{ matrix.python-version }}"
        echo "Targeted Deployment Combo? $DEPLOY_TARGET"
    - name: Git branch name
      id: git-branch-name
      uses: EthanSK/git-branch-name-action@v1
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r dev-requirements.txt
    - name: Lint
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Install package
      run: |
        pip install -e .
    - name: Test with pytest
      run: |
        pytest -s -m "not skipci"
    - name: Configure Git user
      if: ${{DEPLOY_TARGET}}
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
    - name: Build docs
      if: ${{DEPLOY_TARGET}}
      run: |
        mike deploy --push ${GIT_BRANCH_NAME}
    - name: Install deployment dependencies
      if: ${{DEPLOY_TARGET}}
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Publish to PyPI
      if: ${{DEPLOY_TARGET}}
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*